{
  "metadata": {
    "type": "project",
    "status": "active",
    "priority": "high",
    "created": "{{DATE}}",
    "updated": "{{DATE}}",
    "title": "{{TITLE}}",
    "description": "Data or system migration project",
    "template_version": "1.1"
  },
  "details": {
    "project_name": "{{TITLE}}",
    "goal": "Migrate {{WHAT}} from {{SOURCE}} to {{DESTINATION}}",
    "context": {
      "scale": "{{DATA_SIZE}} records, {{STORAGE_SIZE}}GB",
      "downtime_window": "{{ACCEPTABLE_DOWNTIME}}",
      "criticality": "{{BUSINESS_IMPACT_IF_FAILED}}"
    },
    "success_criteria": [
      "Complete: 100% of data successfully migrated",
      "Accurate: Zero data loss, checksums match",
      "Timely: Completed within {{TIME_WINDOW}}"
    ],
    "migration_strategy": [
      "Analyze Source: Document schema, count records",
      "Build Pipeline: Create migration scripts + validation",
      "Test Migration: Run on subset, verify accuracy",
      "Dry Run: Full migration to staging",
      "Execute: Production migration with monitoring",
      "Validate: Confirm all data, cleanup source"
    ],
    "migration_details": {
      "data_types": "{{TABLES/COLLECTIONS/FILES}}",
      "transformation": "{{ANY_SCHEMA_CHANGES}}",
      "dependencies": "{{WHAT_DEPENDS_ON_THIS_DATA}}"
    },
    "rollback_plan": [
      "Before Point of No Return: Stop migration, revert to source",
      "After Point of No Return: Reverse migrate from destination",
      "Emergency: Restore from backup taken at {{BACKUP_TIME}}"
    ],
    "constraints": {
      "zero_data_loss": "Every record must be accounted for",
      "minimal_downtime": "Use {{STRATEGY}} approach",
      "audit_trail": "Log every record migrated"
    },
    "instructions": {
      "inherits_from": "base_project.md workflow",
      "migration_specific": [
        "Count everything twice (source & destination)",
        "Test with real data subset first",
        "Have rollback plan for each phase",
        "Monitor throughout migration",
        "Keep source until verified"
      ]
    },
    "placeholders_guide": {
      "WHAT": {
        "type": "string",
        "description": "What is being migrated."
      },
      "SOURCE": {
        "type": "string",
        "description": "Source system/location."
      },
      "DESTINATION": {
        "type": "string",
        "description": "Destination system/location."
      },
      "DATA_SIZE": {
        "type": "string",
        "description": "Size of data being migrated."
      },
      "STORAGE_SIZE": {
        "type": "string",
        "description": "Storage size."
      },
      "ACCEPTABLE_DOWNTIME": {
        "type": "string",
        "description": "Acceptable downtime window."
      },
      "BUSINESS_IMPACT_IF_FAILED": {
        "type": "string",
        "description": "Business impact if migration fails."
      },
      "TIME_WINDOW": {
        "type": "string",
        "description": "Time window for completion."
      },
      "TABLES/COLLECTIONS/FILES": {
        "type": "string",
        "description": "Types of data being migrated."
      },
      "ANY_SCHEMA_CHANGES": {
        "type": "string",
        "description": "Any schema changes during migration."
      },
      "WHAT_DEPENDS_ON_THIS_DATA": {
        "type": "string",
        "description": "Dependencies on this data."
      },
      "BACKUP_TIME": {
        "type": "string",
        "description": "Time of backup."
      },
      "STRATEGY": {
        "type": "string",
        "description": "Migration strategy (e.g., 'zero-downtime')."
      }
    }
  }
}